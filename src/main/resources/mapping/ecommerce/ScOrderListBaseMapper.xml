<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isechome.ecommerce.mapper.ecommerce.ScOrderListBaseMapper" >
  <resultMap id="BaseResultMap" type="com.isechome.ecommerce.entity.ScOrderListBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="purchase_mid" property="purchaseMid" jdbcType="INTEGER" />
    <result column="piece" property="piece" jdbcType="DOUBLE" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="settlement_weight" property="settlementWeight" jdbcType="DOUBLE" />
    <result column="settlement_money" property="settlementMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="arrival_code" property="arrivalCode" jdbcType="VARCHAR" />
    <result column="freight" property="freight" jdbcType="DOUBLE" />
    <result column="ticket_type" property="ticketType" jdbcType="INTEGER" />
    <result column="iskp" property="iskp" jdbcType="TINYINT" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="order_expiration_time" property="orderExpirationTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
     <result column="bpiece" property="bpiece" jdbcType="DOUBLE" />


     <collection property="scOrderListDetail"  ofType="com.isechome.ecommerce.entity.ScOrderListDetail">
      <id column="did" property="id" jdbcType="INTEGER" />
      <result column="dorder_baseid" property="orderBaseid" jdbcType="VARCHAR" />
      <result column="dresource_id" property="resourceId" jdbcType="INTEGER" />
      <result column="dpiece" property="piece" jdbcType="DOUBLE" />
      <result column="dnum" property="num"  jdbcType="DOUBLE" />
       <result column="price" property="price"  jdbcType="DOUBLE" />
      <result column="original_price" property="originalPrice"  jdbcType="DOUBLE" />

      <result column="dsettlement_weight" property="settlementWeight"  jdbcType="DOUBLE" />
      <result column="dsettlement_money" property="settlementMoney"  jdbcType="DOUBLE" />
      <result column="extract_piece" jdbcType="VARCHAR" property="extractPiece" />
      <result column="extract_num" jdbcType="VARCHAR" property="extractNum" />
      <result column="exist_save_action" jdbcType="TINYINT" property="existSaveAction" />
      <result column="dis_deleted" jdbcType="TINYINT" property="isDeleted" />
      <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
      <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />

      <association property="scshelfResource" javaType="com.isechome.ecommerce.entity.ScShelfResource"> 
        <result column="variety_name" jdbcType="VARCHAR" property="varietyName" />
        <result column="material" jdbcType="VARCHAR" property="material" />
        <result column="specification" jdbcType="VARCHAR" property="specification" />
        <result column="factory" jdbcType="VARCHAR" property="factory" />
        <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
        <result column="sold_num" jdbcType="DOUBLE" property="soldNum" />
        <result column="num" jdbcType="DOUBLE" property="num" />
        <result column="rprice" jdbcType="DOUBLE" property="price" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="pmid" jdbcType="INTEGER" property="pmid" />
      </association>
    </collection>
  </resultMap>


   <resultMap id="BaseResultMap2" type="com.isechome.ecommerce.entity.ScOrderListBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="purchase_mid" property="purchaseMid" jdbcType="INTEGER" />
    <result column="piece" property="piece" jdbcType="DOUBLE" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="settlement_weight" property="settlementWeight" jdbcType="DOUBLE" />
    <result column="settlement_money" property="settlementMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="arrival_code" property="arrivalCode" jdbcType="VARCHAR" />
    <result column="freight" property="freight" jdbcType="DOUBLE" />
    <result column="ticket_type" property="ticketType" jdbcType="INTEGER" />
    <result column="iskp" property="iskp" jdbcType="TINYINT" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="order_expiration_time" property="orderExpirationTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
   
    <collection property="scOrderListPurchase"  ofType="com.isechome.ecommerce.entity.LogisticsPurchase">
      <id column="pid" property="id" jdbcType="INTEGER" />
      <result column="order_detailid" property="orderDetailid" jdbcType="INTEGER" />
      <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
      <result column="extract_id" property="extractId" jdbcType="VARCHAR" />
      <result column="distribute_num" property="distributeNum" jdbcType="DOUBLE" />
      <result column="actual_num" property="actualNum" jdbcType="DOUBLE" />
      <result column="pnum" property="num" jdbcType="DOUBLE" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="depository" property="depository" jdbcType="VARCHAR" />
      <result column="purchase_amount" property="purchaseAmount" jdbcType="DOUBLE" />
      <result column="purchase_user_id" property="purchaseUserId" jdbcType="INTEGER" />
      <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER" />
      <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
      <result column="supplier_mid" property="supplierMid" jdbcType="INTEGER" />
       <result column="lcreat_time" property="creatTime" jdbcType="TIMESTAMP" />
      
      <association property="scshelfResource" javaType="com.isechome.ecommerce.entity.ScShelfResource"> 
        <result column="variety_name" jdbcType="VARCHAR" property="varietyName" />
        <result column="material" jdbcType="VARCHAR" property="material" />
        <result column="specification" jdbcType="VARCHAR" property="specification" />
        <result column="factory" jdbcType="VARCHAR" property="factory" />
        <result column="warehouse" jdbcType="VARCHAR" property="warehouse" />
        <result column="sold_num" jdbcType="DOUBLE" property="soldNum" />
        <result column="num" jdbcType="DOUBLE" property="num" />
        <result column="rprice" jdbcType="DOUBLE" property="price" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="pmid" jdbcType="INTEGER" property="pmid" />
      </association>
    </collection>
  </resultMap>

  <resultMap id="BaseResultMap3" type="com.isechome.ecommerce.entity.ScOrderListBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="purchase_mid" property="purchaseMid" jdbcType="INTEGER" />
    <result column="piece" property="piece" jdbcType="DOUBLE" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="settlement_weight" property="settlementWeight" jdbcType="DOUBLE" />
    <result column="settlement_money" property="settlementMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="arrival_code" property="arrivalCode" jdbcType="VARCHAR" />
    <result column="freight" property="freight" jdbcType="DOUBLE" />
    <result column="ticket_type" property="ticketType" jdbcType="INTEGER" />
    <result column="iskp" property="iskp" jdbcType="TINYINT" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="order_expiration_time" property="orderExpirationTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
     <result column="bpiece" property="bpiece" jdbcType="DOUBLE" />


     <collection property="scOrderListDetail"  ofType="com.isechome.ecommerce.entity.ScOrderListDetail">
      <id column="did" property="id" jdbcType="INTEGER" />
      <result column="dorder_baseid" property="orderBaseid" jdbcType="VARCHAR" />
      <result column="dresource_id" property="resourceId" jdbcType="INTEGER" />
      <result column="dpiece" property="piece" jdbcType="DOUBLE" />
      <result column="dnum" property="num"  jdbcType="DOUBLE" />
       <result column="price" property="price"  jdbcType="DOUBLE" />
      <result column="original_price" property="originalPrice"  jdbcType="DOUBLE" />

      <result column="dsettlement_weight" property="settlementWeight"  jdbcType="DOUBLE" />
      <result column="dsettlement_money" property="settlementMoney"  jdbcType="DOUBLE" />
      <result column="extract_piece" jdbcType="VARCHAR" property="extractPiece" />
      <result column="extract_num" jdbcType="VARCHAR" property="extractNum" />
      <result column="exist_save_action" jdbcType="TINYINT" property="existSaveAction" />
      <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
      <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />

      <collection property="logisticsPurchase"  ofType="com.isechome.ecommerce.entity.LogisticsPurchase">
      <id column="pid" property="id" jdbcType="INTEGER" />
      <result column="order_detailid" property="orderDetailid" jdbcType="INTEGER" />
      <result column="resource_id" property="resourceId" jdbcType="INTEGER" />
      <result column="extract_id" property="extractId" jdbcType="VARCHAR" />
      <result column="distribute_num" property="distributeNum" jdbcType="DOUBLE" />
      <result column="actual_num" property="actualNum" jdbcType="DOUBLE" />
      <result column="type" property="type" jdbcType="TINYINT" />
      <result column="kind" property="kind" jdbcType="TINYINT" />
      <result column="pnum" property="num" jdbcType="DOUBLE" />
      <result column="price" property="price" jdbcType="DOUBLE" />
      <result column="depository" property="depository" jdbcType="VARCHAR" />
      <result column="purchase_amount" property="purchaseAmount" jdbcType="DOUBLE" />
      <result column="purchase_user_id" property="purchaseUserId" jdbcType="INTEGER" />
      <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER" />
      <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
      <result column="supplier_mid" property="supplierMid" jdbcType="INTEGER" />
       <result column="lcreat_time" property="creatTime" jdbcType="TIMESTAMP" />
       </collection>
    </collection>
  </resultMap>


<resultMap id="BaseResultMap4" type="com.isechome.ecommerce.entity.ScOrderListBase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="pmid" property="pmid" jdbcType="INTEGER" />
    <result column="purchase_mid" property="purchaseMid" jdbcType="INTEGER" />
    <result column="piece" property="piece" jdbcType="DOUBLE" />
    <result column="num" property="num" jdbcType="DOUBLE" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="settlement_weight" property="settlementWeight" jdbcType="DOUBLE" />
    <result column="settlement_money" property="settlementMoney" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="arrival_code" property="arrivalCode" jdbcType="VARCHAR" />
    <result column="freight" property="freight" jdbcType="DOUBLE" />
    <result column="ticket_type" property="ticketType" jdbcType="INTEGER" />
    <result column="iskp" property="iskp" jdbcType="TINYINT" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="order_expiration_time" property="orderExpirationTime" jdbcType="TIMESTAMP" />
    <result column="confirm_time" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="INTEGER" />
     <result column="bpiece" property="bpiece" jdbcType="DOUBLE" />


  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sc_order_list_base
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" useGeneratedKeys="true" keyProperty="id">
    insert into sc_order_list_base (id, order_id, pmid, 
      purchase_mid, piece, num,total_price, 
      settlement_weight, settlement_money, `status`, destination,arrival_code,freight,ticket_type,
      iskp,order_expiration_time, confirm_time, 
      confirm_user_id, creat_time, create_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{pmid,jdbcType=INTEGER}, 
      #{purchaseMid,jdbcType=INTEGER}, #{piece,jdbcType=DOUBLE}, #{num,jdbcType=DOUBLE}, #{totalPrice,jdbcType=DOUBLE},
      #{settlementWeight,jdbcType=DOUBLE}, #{settlementMoney,jdbcType=DOUBLE}, #{status,jdbcType=TINYINT}, 
      #{destination,jdbcType=VARCHAR},#{arrivalCode,jdbcType=VARCHAR},#{freight,jdbcType=DOUBLE},#{ticketType,jdbcType=INTEGER},
      #{iskp,jdbcType=TINYINT},#{orderExpirationTime,jdbcType=TIMESTAMP}, #{confirmTime,jdbcType=TIMESTAMP}, 
      #{confirmUserId,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}
      )
  </insert>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, order_id, pmid, purchase_mid, piece, num,total_price, settlement_weight, settlement_money, 
    `status`,destination,arrival_code,freight,ticket_type, iskp, order_expiration_time, 
    confirm_time, confirm_user_id,creat_time, create_user_id
    from sc_order_list_base
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getSumNum" resultMap="BaseResultMap">
    select sum(num) as num
    from sc_order_list_base
    where pmid = #{pmid,jdbcType=INTEGER} and (`status`='3' or `status`='4') and creat_time &gt;= #{beginOfDay,jdbcType=TIMESTAMP} and creat_time &lt;= #{endOfDay,jdbcType=TIMESTAMP}
    group by pmid
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, order_id, pmid, purchase_mid, piece, num, total_price,settlement_weight, settlement_money, 
    `status`,destination,arrival_code,freight,ticket_type, iskp, order_expiration_time, 
    confirm_time, confirm_user_id, creat_time, create_user_id
    from sc_order_list_base
  </select>


  <select id="getOrderListByIds" resultMap="BaseResultMap" >
    select res.variety_name, res.material, res.specification, res.factory, res.warehouse, base.piece,base.status, base.ticket_type,base.freight,base.piece as bpiece, base.num, base.purchase_mid, base.id,detail.resource_id dresource_id,detail.piece dpiece,detail.num dnum,detail.price,detail.extract_piece, detail.extract_num,detail.order_baseid dorder_baseid,
     base.order_id, base.creat_time, base.confirm_time ,base.total_price,detail.is_deleted as dis_deleted,detail.exist_save_action
    from (sc_order_list_base base LEFT JOIN sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id  
    where base.id in(${ids})  order by  base.creat_time desc
  </select>


  <select id="getOrderList" resultMap="BaseResultMap4" >
    select  base.id
    from (sc_order_list_base base LEFT JOIN sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id  
    <where>
      base.pmid = #{pmid}  
      <if test="status != null and status!=''">
        and base.status= #{status}
      </if>
      <if test="purchase_mid != null and purchase_mid!=''">
        and base.purchase_mid = #{purchase_mid}
      </if>
      <if test="comids != null and comids!=''">
        and base.purchase_mid in (${comids}) 
      </if>
      <if test="orderId != null and orderId!=''">
        and base.order_id like '%${orderId}%'
      </if>
      <if test="varietyName != null and varietyName!=''">
        and res.variety_name like '%${varietyName}%'
      </if>
      <if test="Material!=null and Material!=''">
        and res.material like '%${Material}%'
      </if>
      <if test="Spec!=null and Spec!=''">
        and res.specification like '%${Spec}%'
      </if>
      <if test="origin_code!=null and origin_code!=''">
        and res.factory like '%${origin_code}%'
      </if>
      <if test="iskp!=null and iskp!=''">
        and base.iskp = #{iskp}
      </if>
      <if test="stime!=null and stime!=''">
        AND base.creat_time &gt;= #{stime}
      </if>
      <if test="etime!=null and etime!=''">
        AND base.creat_time &lt;= #{etime}
      </if>
      group by base.id
      order by  base.creat_time desc
    </where>
  </select>


  <select id="getOrderById" resultMap="BaseResultMap" >
    select base.*,detail.price,detail.original_price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.exist_save_action,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,res.price rprice,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    <where>
      base.id = #{id,jdbcType=INTEGER}  and detail.is_deleted=0   order by detail.id asc
    </where>
  </select>


  <update id="updateOrderStatus" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
      update sc_order_list_base
      set `status` = #{status,jdbcType=TINYINT}
      where id = #{id,jdbcType=INTEGER}
  </update>


 

  <update id="updatecleanOrder" >
      update sc_order_list_base
      set `status` = 0
      where pmid = #{pmid,jdbcType=INTEGER} and (`status`='1' or `status`='2') and creat_time &gt;= #{beginOfDay,jdbcType=TIMESTAMP} and creat_time &lt;= #{endOfDay,jdbcType=TIMESTAMP}
  </update>


  <update id="orderMoneyMach" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
      update sc_order_list_base
      set `status` = 3  where pmid = #{pmid,jdbcType=INTEGER} and purchase_mid = #{purchase_mid,jdbcType=INTEGER} and total_price=#{total_price,jdbcType=DOUBLE} and status=2
  </update>

  
  <select id="getOrderMoneyMachId" resultType="java.lang.Integer" >
     select id
      from sc_order_list_base where   pmid = #{pmid,jdbcType=INTEGER} and purchase_mid = #{purchase_mid,jdbcType=INTEGER} and total_price=#{total_price,jdbcType=DOUBLE} and status=2 order by creat_time desc limit 1
  </select>

  <select id="getOrderInfoByOrderId" resultMap="BaseResultMap" >
    select order_id, pmid, purchase_mid, piece, num,total_price, settlement_weight, settlement_money
    from sc_order_list_base
    where order_id = #{orderId,jdbcType=VARCHAR} and `status` = 4
  </select>

  <select id="getInfoByOrderId" resultMap="BaseResultMap" >
    select id, order_id, pmid, ticket_type,freight, purchase_mid, piece, num,total_price, settlement_weight, settlement_money, status
    from sc_order_list_base
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  

  <select id="getOrderListByStatus" resultMap="BaseResultMap" >
    select base.*,detail.price,detail.extract_piece,detail.exist_save_action, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,  res.price rprice, res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    where base.pmid=#{pmid,jdbcType=INTEGER} and base.purchase_mid=#{purchase_mid,jdbcType=INTEGER} and base.status=#{status,jdbcType=TINYINT}  and detail.is_deleted=0 order by base.total_price desc,base.creat_time desc
  </select>

  <select id="getOrderByIds" resultMap="BaseResultMap">
     select base.*,detail.price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    <where>
     detail.is_deleted=0 
       and  base.order_id  in 
      <foreach collection="order_ids" item="order_id" index="no" open="("
			separator="," close=")">
			#{order_id}
		</foreach>
    <if test="status!=null and status!=''">
        status=#{status}
    </if>
    <if test="iskp!=null and iskp!=''">
        iskp=#{iskp}
    </if>
    <if test="mid!=null and mid!=''">
        mid=#{mid}
    </if>
    <if test="pmid!=null and pmid!=''">
        pmid=#{pmid}
    </if>
    </where>
  </select>

  <select id="getBaseByIds" resultMap="BaseResultMap">
     select * from sc_order_list_base where id in(${ids})
    <!-- <where>
      id  in(${ids})
       <foreach collection="ids" item="id" index="no" open="("	separator="," close=")">
			  #{id}
		  </foreach>
    
    </where> -->
  </select>
   <update id="updatepurchase" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
    update sc_order_list_base
    set 
      iskp = #{iskp,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBaseByOrderId" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
    update sc_order_list_base
    set `status` = 4, settlement_weight = #{settlementWeight,jdbcType=DOUBLE}, settlement_money = #{settlementMoney,jdbcType=DOUBLE}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>


  <select id="getDetaiLogisticsList" resultMap="BaseResultMap2"  >
   select base.id,base.purchase_mid,base.order_id,base.creat_time,res.variety_name,res.num snum, res.material, res.specification, res.price rprice, res.factory, res.warehouse,log.id pid,log.extract_id,log.type,log.kind,log.distribute_num,log.actual_num,log.num pnum,log.depository,log.purchase_amount,log.supplier_name,log.supplier_mid,log.audit_user_id,log.purchase_user_id
    from sc_order_list_base base LEFT JOIN (sc_logistics_purchase log   LEFT JOIN sc_shelf_resource res ON res.id=log.resource_id ) ON base.order_id= log.order_id
  
   <where>
      log.kind=1 and log.type=#{type,jdbcType=TINYINT}  
      and base.pmid = #{pmid}

      <if test="orderId != null and orderId!=''">
        and base.order_id like '%${orderId}%'
      </if>
      <if test="supplier_mid != null and supplier_mid!=''">
        and log.supplier_mid = #{supplier_mid}
      </if>
      <if test="purchase_mid != null and purchase_mid!=''">
        and base.purchase_mid  = #{purchase_mid}
      </if>
      <if test="varietyName != null and varietyName!=''">
        and res.variety_name like '%${varietyName}%'
      </if>
      <if test="Material!=null and Material!=''">
        and res.material like '%${Material}%'
      </if>
      <if test="Spec!=null and Spec!=''">
        and res.specification like '%${Spec}%'
      </if>
      <if test="origin_code!=null and origin_code!=''">
        and res.factory like '%${origin_code}%'
      </if>
      <if test="stime!=null and stime!=''">
        AND base.creat_time &gt;= #{stime}
      </if>
      <if test="etime!=null and etime!=''">
        AND base.creat_time &lt;= #{etime}
      </if>
      order by  base.creat_time desc
    </where>

  </select>


  <select id="getLogisticsById" resultMap="BaseResultMap2"  >
   select base.*,res.variety_name,res.num snum, res.material, res.specification, res.price rprice, res.factory, res.warehouse,log.id pid,log.extract_id,log.type,log.kind,log.distribute_num,log.actual_num,log.num pnum,log.depository,log.purchase_amount,log.supplier_name,log.supplier_mid,log.audit_user_id,log.purchase_user_id,log.creat_time as lcreat_time
    from sc_order_list_base base LEFT JOIN (sc_logistics_purchase log   LEFT JOIN sc_shelf_resource res ON res.id=log.resource_id ) ON base.order_id= log.order_id
    where  log.type=1  and (base.purchase_mid = #{mid} or base.pmid = #{mid}) and log.id= #{id,jdbcType=INTEGER}
  </select>


  <select id="getDetailById" resultMap="BaseResultMap"  >
   select base.*,detail.price,detail.extract_piece,detail.exist_save_action, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid
    from sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid
    where detail.id= #{id,jdbcType=INTEGER}
  </select>

  <update id="updateTotalPriceById" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
    update sc_order_list_base
    set 
      total_price = #{total_price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>


   <select id="getYjsOrderList" resultMap="BaseResultMap" >
    select res.variety_name, res.material, res.specification, res.factory, res.warehouse, base.piece,base.piece as bpiece, base.num, base.id,detail.resource_id dresource_id,detail.piece dpiece,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.original_price original_price,detail.extract_piece, detail.extract_num,detail.order_baseid dorder_baseid,
     base.order_id, base.creat_time, base.confirm_time ,base.settlement_money
    from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id  
    <where>
      base.status = #{status} and  detail.is_deleted=0
      <if test="pmid!=null and pmid!=''">
         and base.pmid = #{pmid}
      </if>
      <if test="purchase_mid!=null and purchase_mid!=''">
        and base.purchase_mid = #{purchase_mid}
      </if>
      <if test="iskp!=null and iskp!=''">
        and base.iskp = #{iskp}
      </if>
      <if test="stime!=null and stime!=''">
        AND base.creat_time &gt;= #{stime}
      </if>
      <if test="etime!=null and etime!=''">
        AND base.creat_time &lt;= #{etime}
      </if>
      order by  base.creat_time desc
       

    </where>
  </select>

  <select id="getOrderByorderId" resultMap="BaseResultMap" >
    select base.*,detail.price,detail.original_price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.exist_save_action,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,detail.is_deleted as dis_deleted,res.price rprice,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    <where>
      base.order_id = #{orderId,jdbcType=INTEGER} order by detail.id asc
    </where>
  </select>

  <select id="getBaseOrderIds" resultMap="BaseResultMap">
     select * from sc_order_list_base where order_id in(${orderids})
  </select>


  <update id="updateByPrimaryKey" parameterType="com.isechome.ecommerce.entity.ScOrderListBase" >
    update sc_order_list_base
    <set>
      <if test="status != null and status != ''">
          status =#{status} ,
      </if>

      <if test="confirmUserId != null and confirmUserId != ''">
          confirm_user_id =#{confirmUserId} ,
          confirm_time=NOW(),
      </if>

      <if test="totalPrice != null and totalPrice != ''">
          total_price =#{totalPrice} ,
      </if>
      <if test="piece != null and piece != ''">
          piece =#{piece} ,
      </if>
      <if test="num != null and num != ''">
          num =#{num} ,
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

 
  <select id="getOrderBase" resultMap="BaseResultMap" >
     select base.*,detail.price,detail.original_price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.exist_save_action,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,res.price rprice,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    <where>
      detail.is_deleted=0
      <if test="pmid!=null and pmid!=''">
         and base.pmid = #{pmid}
      </if>
      <if test="purchaseMid!=null and purchaseMid!=''">
        and base.purchase_mid = #{purchaseMid}
      </if>
      <if test="totalPrice!=null and totalPrice!=''">
        and base.total_price = #{totalPrice}
      </if>
      <if test="iskp!=null and iskp!=''">
        and base.iskp = #{iskp}
      </if>
      <if test="stime!=null and stime!=''">
        AND base.creat_time &gt;= #{stime}
      </if>
      <if test="etime!=null and etime!=''">
        AND base.creat_time &lt;= #{etime}
      </if>
      order by  base.creat_time desc 
       

    </where>
  </select>


   <select id="getLogisticsByOrderId" resultMap="BaseResultMap3"  >
   select base.*,detail.id as did,detail.num as dnum,detail.exist_save_action,detail.resource_id as dresource_id,log.id pid,log.extract_id,log.order_detailid,log.type,log.kind,log.distribute_num,log.actual_num,log.num pnum,log.depository,log.purchase_amount,log.supplier_name,log.supplier_mid,log.audit_user_id,log.purchase_user_id,log.creat_time as lcreat_time
    from sc_order_list_base base LEFT JOIN ( (select * from sc_order_list_detail order by id asc ) detail   LEFT JOIN (select * from sc_logistics_purchase order by kind,type,id asc) log ON detail.id=log.order_detailid ) ON base.order_id= detail.order_baseid
    where  detail.is_deleted=0 and (base.purchase_mid = #{mid} or base.pmid = #{mid}) and base.order_id= #{orderId,jdbcType=INTEGER} 
  </select>

  <select id="getOrderByorderId2" resultMap="BaseResultMap" >
      select base.*,detail.price,detail.original_price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.exist_save_action,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,res.price rprice,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
      from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
      <where>
        base.order_id = #{orderId,jdbcType=INTEGER} order by detail.id asc
      </where>
  </select>


  <select id="getDQCountByResourceId" resultType="Integer">
    select count(base.id)
    from sc_order_list_base base LEFT JOIN sc_order_list_detail detail ON base.order_id=detail.order_baseid  
    where  detail.is_deleted=0 and detail.resource_id=#{resource_id,jdbcType=VARCHAR} and base.pmid=#{pmid,jdbcType=INTEGER} and (base.status=1 or base.status=2)
  </select>


  <select id="getOrderDetailById" resultMap="BaseResultMap" >
    select base.*,detail.price,detail.original_price,detail.extract_piece, detail.extract_num,detail.id did,detail.resource_id dresource_id,detail.exist_save_action,detail.settlement_weight dsettlement_weight,detail.settlement_money dsettlement_money,detail.piece dpiece,detail.order_baseid dorder_baseid,detail.num dnum,detail.pmid,detail.is_deleted as dis_deleted,res.price rprice,   res.variety_name, res.material, res.specification, res.factory, res.warehouse
     from (sc_order_list_base base LEFT JOIN  sc_order_list_detail detail ON base.order_id=detail.order_baseid ) LEFT JOIN sc_shelf_resource res ON res.id= detail.resource_id 
    <where>
      base.id = #{id,jdbcType=INTEGER}     order by detail.id asc
    </where>
  </select>

    <update id="cancelOrder">
    update sc_order_list_base
    set `status` = 0 where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

    <update id="subOrderNum" parameterType="com.isechome.ecommerce.entity.ScOrderListBase">
    update sc_order_list_base
    set `piece` = #{piece},`num` = #{num},`total_price` = #{totalPrice} where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

</mapper>